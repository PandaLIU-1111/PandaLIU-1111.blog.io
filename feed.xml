<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://pandaliu-1111.github.io//</id><title>pandaLIU-blog</title><subtitle>一个程序员.</subtitle> <updated>2021-04-19T01:39:45+08:00</updated> <author> <name>pandaLIU-1111</name> <uri>http://pandaliu-1111.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="http://pandaliu-1111.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="http://pandaliu-1111.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 pandaLIU-1111 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>分布式事务和事务的基本理论</title><link href="http://pandaliu-1111.github.io//posts/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%90%86%E8%AE%BA/" rel="alternate" type="text/html" title="分布式事务和事务的基本理论" /><published>2021-04-19T00:00:00+08:00</published> <updated>2021-04-19T00:00:00+08:00</updated> <id>http://pandaliu-1111.github.io//posts/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%90%86%E8%AE%BA/</id> <content src="http://pandaliu-1111.github.io//posts/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%92%8C%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%90%86%E8%AE%BA/" /> <author> <name>pandaLIU-1111</name> </author> <category term="微服务" /> <summary> TCC 分布式事务 事务理论 ACID事务的四大特性 A:原子性(Atomicity) 一个事务(transaction)中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。 C:一致性(Consistency) 事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。如果事务成功地完成，那么系统中所有变化将正确地应用，系统处于有效状态。如果在事务中出现错误，那么系统中的所有变化将自动地回滚，系统返回到原始状态。 I:隔离性(Isolation) 指的是在并发环境中，当不同的事务同时操纵相同的数据时，每个事务都有各自的完整数据空间。由并发事务所做的修改必须与任何其他并发事务所做的修改隔离。事务查看数据更新时，数据所处的状态要么是另... </summary> </entry> <entry><title>如何在 phpstrom 配置快速代码格式化</title><link href="http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E5%9C%A8phpstrom%E9%85%8D%E7%BD%AE%E6%A0%BC%E5%BC%8F%E5%8C%96/" rel="alternate" type="text/html" title="如何在 phpstrom 配置快速代码格式化" /><published>2021-03-20T00:00:00+08:00</published> <updated>2021-03-21T22:27:13+08:00</updated> <id>http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E5%9C%A8phpstrom%E9%85%8D%E7%BD%AE%E6%A0%BC%E5%BC%8F%E5%8C%96/</id> <content src="http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E5%9C%A8phpstrom%E9%85%8D%E7%BD%AE%E6%A0%BC%E5%BC%8F%E5%8C%96/" /> <author> <name>pandaLIU-1111</name> </author> <category term="php" /> <category term="phpstrom" /> <summary> 如何在 phpstrom 配置快速代码格式化 步骤一 使用 composer global require fabpot/php-cs-fixer 下载 php-cs-fixer 步骤二 使用 which php-cs-fixer 找到 php-cs-fixer 路径 步骤三 在 phpstrom 设置内找到 external Tools 步骤四 添加格式化脚本 步骤五 参数说明： name ： 扩展名称（可随意给） program: 填写 php-cs-fixer 路径 Arguments: fix --config=$ProjectFileDir$/.php_cs "$FileDir$/$FileName$" Working directory: $ProjectFileDir$ 步骤六 配置快速格式化快捷键 在 Keymap 内... </summary> </entry> <entry><title>如何使用 phpdbg 生成单元测试覆盖率</title><link href="http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8phpdbg%E7%94%9F%E6%88%90%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/" rel="alternate" type="text/html" title="如何使用 phpdbg 生成单元测试覆盖率" /><published>2021-03-20T00:00:00+08:00</published> <updated>2021-03-21T21:58:24+08:00</updated> <id>http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8phpdbg%E7%94%9F%E6%88%90%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/</id> <content src="http://pandaliu-1111.github.io//posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8phpdbg%E7%94%9F%E6%88%90%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/" /> <author> <name>pandaLIU-1111</name> </author> <category term="php" /> <category term="hyperf" /> <summary> 如何使用 phpdbg 生成单元测试覆盖率 修改 phpunit.xml 文件内容为如下 &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt; &amp;lt;phpunit backupGlobals="false" backupStaticAttributes="false" bootstrap="./test/bootstrap.php" colors="true" convertErrorsToExceptions="true" convertNoticesToExceptions="true" convertWarningsToExceptions="true" processIsolation="false" ... </summary> </entry> </feed>
